name: Integration Test in Tutor
description: "A Github action to test your plugin in Tutor (Open edX distribution)"
inputs:
  app_name:
    description: "Application name to test. E.g., eox-tenant."
    required: true
  tutor_version:
    description: "The tutor version matrix to use."
    required: true
  shell_file_to_run:
    description: "The path of the shell file to run the integration tests."
    required: false

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Prepare Tutor
      run: |
        pip install "tutor$INPUT_TUTOR_VERSION"
        export TUTOR_PLUGINS_ROOT=$(pwd)/plugins/ && export TUTOR_ROOT=$(pwd)
        tutor config save # Create the config.yml
        chmod 777 . -R
      shell: bash
      env:
        INPUT_TUTOR_VERSION: ${{ inputs.tutor_version }}

    - name: Save Hosts in Environment
      run: |
        echo "LMS_HOST=local.edly.io" >> "$GITHUB_ENV"
        echo "CMS_HOST=studio.local.edly.io" >> "$GITHUB_ENV"
      shell: bash

    - name: Launch Tutor
      run: |
        tutor config save --set LMS_HOST=$LMS_HOST
        tutor config save --set CMS_HOST=$CMS_HOST
        tutor mounts add lms,cms,lms-worker,cms-worker:$INPUT_APP_NAME:/openedx/$INPUT_APP_NAME
        tutor local launch --non-interactive
      shell: bash
      env:
        INPUT_APP_NAME: ${{ inputs.app_name }}

    - name: Install Plugin
      run: |
        tutor local exec lms pip install -e /openedx/$INPUT_APP_NAME
        tutor local exec cms pip install -e /openedx/$INPUT_APP_NAME
        tutor local restart
      shell: bash
      env:
        INPUT_APP_NAME: ${{ inputs.app_name }}

    - name: Curl Heartbeat
      run: |
        echo "Curling the heartbeat"
        curl http://$LMS_HOST/heartbeat
      shell: bash

    - name: Curl eox-info
      run: |
        echo "Curling the eox-info"
        curl http://$LMS_HOST/$INPUT_APP_NAME/eox-info
      shell: bash
      env:
        INPUT_APP_NAME: ${{ inputs.app_name }}

    - name: Install Extra Requirements
      run: |
        pip install pytest
      shell: bash

    - name: Run Bash Script
      if: ${{ inputs.shell_file_to_run }}
      run: bash $INPUT_SHELL_FILE
      shell: bash
      env:
        INPUT_SHELL_FILE: ${{ inputs.app_name }}/${{ inputs.shell_file_to_run }}
