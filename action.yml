name: Integration Test in Tutor
description: 'A Github action to test your plugin in Tutor (Open edX distribution)'
inputs:
  app_name:
    description: 'Application name to test. E.g., eox-tenant.'
    required: true
  tutor_version:
    description: 'The tutor version matrix to use.'
    required: true
  shell_file_to_run:
    description: 'The path of the shell file to run the integration tests.'
    required: false

runs:
  using: 'composite'
  steps:
  - name: Check out the repository
    uses: actions/checkout@v2

  - name: Prepare Tutor and Launch
    run: |
      pip install "tutor$INPUT_TUTOR_VERSION"
      tutor --version
      tutor config save
      chmod 777 . -R
      tutor local launch -I
    shell: bash
    env:
      INPUT_APP: ${{ inputs.app_name }}
      INPUT_TUTOR_VERSION: ${{ inputs.tutor_version }}

  - name: Install eox-core and eox-tenant in LMS
    run: |
      # Install eox-core and eox-tenant in the LMS container
      tutor local run lms pip install eox-core
      tutor local run lms pip install eox-tenant
    shell: bash

  - name: Check if LMS is running
    run: |
      # Set a timeout for 5 minutes (300 seconds) in case LMS takes longer to start
      TIMEOUT=300
      INTERVAL=10
      ELAPSED=0

      echo "Waiting for LMS to be available at http://www.myopenedx.com..."

      # Check if LMS is accessible on http://www.myopenedx.com
      until curl --silent --head --fail http://www.myopenedx.com/heartbeat; do
        if [ $ELAPSED -ge $TIMEOUT ]; then
          echo "LMS is not available after $TIMEOUT seconds, exiting..."
          tutor local logs lms
          exit 1
        fi
        echo "LMS is not available yet, waiting for $INTERVAL seconds..."
        sleep $INTERVAL
        ELAPSED=$((ELAPSED + INTERVAL))
      done

      echo "LMS is up and running."
    shell: bash
